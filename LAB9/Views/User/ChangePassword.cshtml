@model LAB9.ViewModel.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header bg-danger text-white">
                    <h4><i class="fas fa-key"></i> Change Password</h4>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("ChangePassword", "User", FormMethod.Post, new { @class = "needs-validation" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="mb-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CurrentPassword, new { @class = "form-label" })
                                @Html.PasswordFor(model => model.CurrentPassword, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CurrentPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="mb-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.NewPassword, new { @class = "form-label" })
                                @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="mb-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ConfirmPassword, new { @class = "form-label" })
                                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="alert alert-warning">
                                <small><i class="fas fa-exclamation-triangle"></i> For security reasons, please choose a strong password that includes uppercase letters, lowercase letters, numbers, and special characters.</small>
                            </div>
                        </div>

                        <div class="form-group mt-3">
                            <button type="submit" class="btn btn-danger">
                                <i class="fas fa-save"></i> Change Password
                            </button>
                            <a href="@Url.Action("Dashboard", "User")" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Back to Dashboard
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}