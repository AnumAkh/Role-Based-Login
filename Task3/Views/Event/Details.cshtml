@model Task3.ViewModel.EventDetailsViewModel

@{
    ViewBag.Title = Model.Event.Title;
}

<div class="container mt-4">
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    <div class="row">
        <div class="col-md-8">
            <h2>@Model.Event.Title</h2>
            <hr />

            <div class="card mb-4">
                <div class="card-body">
                    <div class="row mb-3">
                        <div class="col-md-3">
                            <strong><i class="fa fa-calendar"></i> Date:</strong>
                        </div>
                        <div class="col-md-9">
                            @Model.Event.EventDate.ToString("dddd, MMMM d, yyyy")
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-3">
                            <strong><i class="fa fa-clock-o"></i> Time:</strong>
                        </div>
                        <div class="col-md-9">
                            @Model.Event.StartTime.ToString(@"hh\:mm tt") - @Model.Event.EndTime.ToString(@"hh\:mm tt")
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-3">
                            <strong><i class="fa fa-map-marker"></i> Location:</strong>
                        </div>
                        <div class="col-md-9">
                            @Model.Event.Location
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-3">
                            <strong><i class="fa fa-users"></i> Capacity:</strong>
                        </div>
                        <div class="col-md-9">
                            <div class="progress" style="height: 25px;">
                                @{
                                    var bookedPercentage = ((double)(Model.Event.Capacity - Model.RemainingSpots) / Model.Event.Capacity) * 100;
                                    var statusClass = Model.RemainingSpots > 0 ? "bg-success" : "bg-danger";
                                }
                                <div class="progress-bar @statusClass" role="progressbar"
                                     style="width: @bookedPercentage%;"
                                     aria-valuenow="@(Model.Event.Capacity - Model.RemainingSpots)"
                                     aria-valuemin="0"
                                     aria-valuemax="@Model.Event.Capacity">
                                    @(Model.Event.Capacity - Model.RemainingSpots)/@Model.Event.Capacity
                                </div>
                            </div>
                            <span class="@(Model.RemainingSpots > 0 ? "text-success" : "text-danger")">
                                @if (Model.RemainingSpots > 0)
                                {
                                    <small><strong>@Model.RemainingSpots</strong> spots remaining</small>
                                }
                                else
                                {
                                    <small><strong>Fully booked</strong></small>
                                }
                            </span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header">
                    <h4>Event Description</h4>
                </div>
                <div class="card-body">
                    @Html.Raw(Model.Event.Description)
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Book This Event</h4>
                </div>
                <div class="card-body">
                    @if (!Request.IsAuthenticated)
                    {
                        <p>You need to be logged in to book this event.</p>
                        <a href="@Url.Action("Login", "Account", new { returnUrl = Url.Action("Details", "Event", new { id = Model.Event.EventId }) })"
                           class="btn btn-primary btn-block">
                            <i class="fa fa-sign-in"></i> Log In to Book
                        </a>
                    }
                    else if (Model.UserHasBooked)
                    {
                        <div class="alert alert-info">
                            <i class="fa fa-check-circle"></i> You have already booked this event.
                        </div>

                        @using (Html.BeginForm("CancelBooking", "Event", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@Model.Event.EventId" />
                            <button type="submit" class="btn btn-danger btn-block"
                                    onclick="return confirm('Are you sure you want to cancel your booking?');">
                                <i class="fa fa-times"></i> Cancel My Booking
                            </button>
                        }
                    }
                    else if (Model.RemainingSpots <= 0)
                    {
                        <div class="alert alert-danger">
                            <i class="fa fa-exclamation-circle"></i> This event is fully booked.
                        </div>
                    }
                    else
                    {
                        @using (Html.BeginForm("Book", "Event", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@Model.Event.EventId" />
                            <button type="submit" class="btn btn-success btn-block">
                                <i class="fa fa-check"></i> Book Now
                            </button>
                        }
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="mt-3">
        <a href="@Url.Action("Index", "Event")" class="btn btn-secondary">
            <i class="fa fa-arrow-left"></i> Back to Events
        </a>
    </div>
</div>